import sys
import subprocess

def installPackage(package):
    p = subprocess.run([sys.executable, "-m", "pip", "install", "-U", package], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    print(p.stdout.decode())

requirements = ["numpy", "scipy", "seaborn","matplotlib", "chart_studio", "scikit-learn", "psutil", "openpyxl", "pandas", "pydicom","lmfit","numericalunits", "sqlalchemy"]
for requirement in requirements:
    installPackage(requirement)

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
#Define the col names
colnames=["sepal_length_in_cm", "sepal_width_in_cm","petal_length_in_cm","petal_width_in_cm", "class"]
#Read the dataset
dataset = pd.read_csv("https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data", header = None, names= colnames ) ### UCI repository
dataset.head()

dataset.info()
dataset.tail()
dataset = dataset.replace({"class":  {"Iris-setosa":1,"Iris-versicolor":2, "Iris-virginica":3}})
dataset.head()
dataset.tail()
dataset.isnull().sum

plt.figure(1)
sns.heatmap(dataset.corr())              ### +1 and -1
plt.title('Correlation On iris Classes')

dataset.corr()

corr = dataset.corr()
fig, ax = plt.subplots(figsize=(5,4))
sns.heatmap(corr, annot=True, ax=ax, cmap = 'coolwarm')

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)
print(cm)
from sklearn.model_selection import cross_val_score
accuracies = cross_val_score(estimator = classifier, X = X_train, y = y_train, cv = 10)
print("Accuracy: {:.2f} %".format(accuracies.mean()*100))
print("Standard Deviation: {:.2f} %".format(accuracies.std()*100))

from sklearn.metrics import confusion_matrix
cm1 = confusion_matrix(y_train, y_trainp)
print(cm1)
from sklearn.model_selection import cross_val_score
accuracies = cross_val_score(estimator = classifier, X = X_train, y = y_train, cv = 10)
print("Accuracy: {:.2f} %".format(accuracies.mean()*100))
print("Standard Deviation: {:.2f} %".format(accuracies.std()*100))


